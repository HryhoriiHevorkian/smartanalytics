name: Develop CI

on:
  push:
    branches:
      - develop

env:
  SMARTANALYTICS_IMAGE_NAME: smartanalytics
  SMARTANALYTICS_IMAGE_TAG: develop
  OPENSHIFT_REGISTRY: openshift-registry.adorsys.de
  OPENSHIFT_NAMESPACE_OBG_INTEG: open-banking-gateway-integ

jobs:
  build_and_test:
    name: Build and test smartanalytics (openjdk 1.11)
    runs-on: ubuntu-latest
    steps:
      - name: Clone Smartanalytics repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build smartanalytics
        run: mvn -ntp -Dmaven.javadoc.skip=true clean compile

      - name: Run Unit Tests
        run: mvn -ntp -DskipITs --fail-at-end clean test

  deploy:
    name: Deploy docker image to the registry test and release to maven central
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Clone Smartanalytics repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build smartanalytics and create jar files
        run: mvn -ntp -Dmaven.javadoc.skip=true -DskipITs -DskipTests clean package

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: adorsys/${{ env.SMARTANALYTICS_IMAGE_NAME }}:${{ env.SMARTANALYTICS_IMAGE_TAG }}

      - name: OBG-INTEG Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.OPENSHIFT_REGISTRY }}
          username: ${{ secrets.OPENSHIFT_OBG_INTEG_USER }}
          password: ${{ secrets.OPENSHIFT_OBG_INTEG_TOKEN }}

      - name: OBG-INTEG Deploy docker image to openshift
        env:
          DOCKERHUB_IMAGE_NAME: adorsys/${{ env.SMARTANALYTICS_IMAGE_NAME }}:${{ env.SMARTANALYTICS_IMAGE_TAG }}
          OPENSHIFT_IMAGE_NAME: ${{ env.OPENSHIFT_REGISTRY }}/${{ env.OPENSHIFT_NAMESPACE_OBG_INTEG }}/${{ env.SMARTANALYTICS_IMAGE_NAME }}:latest
        run: |
          docker pull ${DOCKERHUB_IMAGE_NAME}
          docker tag ${DOCKERHUB_IMAGE_NAME} ${OPENSHIFT_IMAGE_NAME}
          docker push ${OPENSHIFT_IMAGE_NAME}
