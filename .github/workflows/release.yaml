name: Release CI

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-RC*'
      - '*.*'
      - '*.*-RC*'

env:
  SONAR_PRJ_KEY: adorsys_XS2A-Sandbox
  SONAR_ORG: adorsys
  SONAR_HOST: https://sonarcloud.io
  GPG_EXECUTABLE: ${{ secrets.GPG_EXECUTABLE }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SMARTANALYTICS_IMAGE_NAME: smartanalytics

jobs:
  build_and_test:
    name: Build and test smartanalytics (openjdk 1.11)
    runs-on: ubuntu-latest
    steps:
      - name: Clone Smartanalytics repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build smartanalytics
        run: mvn -ntp -Dmaven.javadoc.skip=true clean compile

      - name: Run Unit Tests
        run: mvn -ntp -DskipITs --fail-at-end clean test

  deploy:
    name: Deploy docker image to the registry test and release to maven central
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Clone Smartanalytics repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build smartanalytics and create jar files
        run: mvn -ntp -Dmaven.javadoc.skip=true -DskipITs -DskipTests clean package

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get docker tags
        run: |
          echo  "GIT_TAG=`git describe --tags --abbrev=0 | sed 's/v//'`" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: adorsys/${{ env.SMARTANALYTICS_IMAGE_NAME }}:${{ env.GIT_TAG }}

      - name: Publish to Maven Central
        run: |
          gpg --version
          export GPG_TTY="$( tty )" #need to run to sign artifacts with maven
          echo ${{ secrets.GPG_SECRET_KEY }} | base64 --decode | gpg --import --batch
          echo ${{ secrets.GPG_OWNERTRUST }} | base64 --decode | gpg --batch --import-ownertrust
          mvn -ntp --settings scripts/mvn-release-settings.xml \
          -Dhttp.keepAlive=false \
          -Dmaven.wagon.http.pool=false \
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \
          -Prelease -DskipTests -U deploy
